#set( $symbol_dollar = '$' )
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
    <version>${version}</version>
    <packaging>mule</packaging>
	<name>Mule ${artifactId} Application</name>

    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<mule.version>${muleVersion}</mule.version>
        <mule.tools.version>@project.version@</mule.tools.version>
		<jdk.version>1.8</jdk.version>
		<junit.version>4.12</junit.version>
#if(${domainGroupId} != 'empty')
        <domainGroupId>${domainGroupId}</domainGroupId>
        <domainArtifactId>${domainArtifactId}</domainArtifactId>
        <domainVersion>${domainVersion}</domainVersion>
#end
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.mule.tools.maven</groupId>
				<artifactId>mule-app-maven-plugin</artifactId>
				<version>${symbol_dollar}{mule.tools.version}</version>
				<extensions>true</extensions>
				<configuration>
                    <copyToAppsDirectory>true</copyToAppsDirectory>
#if(${domainGroupId} != 'empty')
                    <!-- unncomment to deploy domain before the applications during install phase
                    <installDomain>true</installDomain>
                    <domainDependency>${symbol_dollar}{domainGroupId}:${symbol_dollar}{domainArtifactId}:${symbol_dollar}{domainVersion}</domainDependency>
                    -->
#end
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-resource</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/app/</directory>
								</resource>
								<resource>
									<directory>src/main/api/</directory>
								</resource>								
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
#if(${domainGroupId} != 'empty')
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-domain-config</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                            <includeArtifacIds>${symbol_dollar}{domainArtifactId}</includeArtifacIds>
                            <includeGroupIds>${symbol_dollar}{domainGroupId}</includeGroupIds>
                            <excludes>**\/*.properties</excludes>
                            <excludeTransitive>true</excludeTransitive>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
#end
		</plugins>
	</build>

	<!-- Mule Dependencies -->
	<dependencies>
#if(${domainGroupId} != 'empty')
        <dependency>
            <groupId>${symbol_dollar}{domainGroupId}</groupId>
            <artifactId>${symbol_dollar}{domainArtifactId}</artifactId>
            <version>${symbol_dollar}{domainVersion}</version>
            <scope>provided</scope>
            <type>zip</type>
        </dependency>
#end
		<!-- Xml configuration -->
#if($EE == 'false')
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-spring-config</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
#end
#if($EE == 'true')
		<dependency>
        	<groupId>com.mulesoft.muleesb</groupId>
			<artifactId>mule-core-ee</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Xml configuration -->
		<dependency>
			<groupId>com.mulesoft.muleesb.modules</groupId>
			<artifactId>mule-module-spring-config-ee</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
#end
		<!-- Mule Transports -->
#foreach($transport in $transports.split(","))
#if($transport == 'wmq' || $transport == 'msmq')
#if(${EE} == 'true')
        <dependency>
            <groupId>com.mulesoft.muleesb.transports</groupId>
            <artifactId>mule-transport-${transport}-ee</artifactId>
            <version>${symbol_dollar}{mule.version}</version>
            <scope>provided</scope>
        </dependency>
#end
#else
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-${transport}</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
#if($EE == 'true')
#if($transport == 'ftp' || $transport == 'jdbc' ||$transport == 'jms')
		<dependency>
        	<groupId>com.mulesoft.muleesb.transports</groupId>
			<artifactId>mule-transport-${transport}-ee</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
#end
#end
#end
#end<!-- Mule Modules -->
#foreach($module in $modules.split(","))
#if($module != 'doc' && $module != 'context')
		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-${module}</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>provided</scope>
		</dependency>
#end
#end	<!-- for testing -->
		<dependency>
			<groupId>org.mule.tests</groupId>
			<artifactId>mule-tests-functional</artifactId>
			<version>${symbol_dollar}{mule.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>mulesoft-releases</id>
			<name>MuleSoft Releases</name>
			<url>https://repository.mulesoft.org/nexus/content/repositories/public</url>
		</repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>mule-public</id>
            <name>MuleSoft Releases</name>
            <url>https://repository.mulesoft.org/nexus/content/repositories/public</url>
        </pluginRepository>
    </pluginRepositories>
</project>
